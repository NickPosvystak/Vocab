{"version":3,"file":"static/js/918.930baba2.chunk.js","mappings":"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","sources":["components/Footer/Footer.jsx","components/Select/SelectInput.jsx","components/Edit/ButtonEdit.jsx","components/TableTask/TableTask.jsx","pages/RecommendPage/Recommend.jsx","services/api.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./Footer.styled.scss\";\r\nimport Logo from \"../../assets/images/logo192.png\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"logo-box\">\r\n      <img src={Logo} alt=\"logo\" className=\"App-logo-spin\" />\r\n      <p className=\"logo-title-example\">under development</p>\r\n      <img src={Logo} alt=\"logo\" className=\"App-logo-spin-1\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { FormControlLabel, Radio, RadioGroup } from \"@mui/material\";\r\n\r\nimport \"./SelectInput.styled.scss\";\r\nimport TableTask from \"../TableTask/TableTask\";\r\n\r\nconst SelectInput = () => {\r\n  const [category, setCategory] = useState(\"\");\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [verbType, setVerbType] = useState(\"\");\r\n\r\n  const handleCategoryChange = (event) => {\r\n    setCategory(event.target.value);\r\n    if (event.target.value !== \"Verb\") {\r\n      setVerbType(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchValue(event.target.value);\r\n  };\r\n\r\n  const handleVerbTypeChange = (event) => {\r\n    setVerbType(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-select\">\r\n        <label className=\"label\">\r\n          <div className=\"input-container\">\r\n            <Box\r\n              component=\"form\"\r\n              sx={{\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  borderRadius: \"15px\",\r\n                  \"&:hover fieldset\": {\r\n                    borderColor: \"rgb(133, 170, 159)\",\r\n                    boxShadow: \"0px 4px 4px 0px rgba(0, 0, 0, 0.25)\",\r\n                  },\r\n                  \"&.Mui-focused fieldset\": {\r\n                    boxShadow: \"0px 4px 4px 0px rgba(0, 0, 0, 0.25)\",\r\n                    borderColor: \"rgb(133, 170, 159)\",\r\n                  },\r\n                  \"&.MuiInputBase fieldset\": {\r\n                    border: \"none\",\r\n                  },\r\n                },\r\n              }}\r\n              noValidate\r\n              autoComplete=\"off\"\r\n            >\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Find the word\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  \"& .MuiInputLabel-root\": {\r\n                    fontWeight: \"500\",\r\n                    fontSize: \"16px\",\r\n                    color: \"#121417\",\r\n                  },\r\n                  \"& .MuiInputLabel-root.Mui-focused\": {\r\n                    color: \"rgb(133, 170, 159)\",\r\n                  },\r\n                  width: \"100%\",\r\n                }}\r\n                value={searchValue}\r\n                onChange={handleSearchChange}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <SearchIcon\r\n                      sx={{ color: \"action.active\", cursor: \"pointer\" }}\r\n                    />\r\n                  ),\r\n                }}\r\n              />\r\n            </Box>\r\n          </div>\r\n        </label>\r\n\r\n        <label className=\"label\">\r\n          <div className=\"input-container\">\r\n            <FormControl\r\n              className=\"input-category\"\r\n              sx={{\r\n                borderRadius: \"15px\",\r\n                fontSize: \"16px\",\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  borderColor: \"rgb(133, 170, 159)\",\r\n                  \"&:hover fieldset\": {\r\n                    borderColor: \"rgb(133, 170, 159)\",\r\n                    boxShadow: \"0px 4px 4px 0px rgba(0, 0, 0, 0.25)\",\r\n                  },\r\n                  \"&.Mui-focused fieldset\": {\r\n                    borderColor: \"rgb(133, 170, 159)\",\r\n                  },\r\n                },\r\n              }}\r\n            >\r\n              <InputLabel\r\n                sx={{\r\n                  fontWeight: \"500\",\r\n                  color: \"#121417\",\r\n                  fontSize: \"16px\",\r\n                  \"&.Mui-focused\": {\r\n                    color: \"rgb(133, 170, 159)\",\r\n                  },\r\n                }}\r\n                id=\"demo-select-small-label\"\r\n              >\r\n                Category\r\n              </InputLabel>\r\n\r\n              <Select\r\n                labelId=\"demo-select-small-label\"\r\n                id=\"demo-select-small\"\r\n                value={category}\r\n                label=\"Category\"\r\n                onChange={handleCategoryChange}\r\n                sx={{\r\n                  borderRadius: \"15px\",\r\n                }}\r\n              >\r\n                <MenuItem className=\"input-label\" value=\"\">\r\n                  <em>All</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"Verb\">Verb</MenuItem>\r\n                <MenuItem value=\"Participle\">Participle</MenuItem>\r\n                <MenuItem value=\"Adjective\">Adjective</MenuItem>\r\n                <MenuItem value=\"Pronoun\">Pronoun</MenuItem>\r\n                <MenuItem value=\"Numerals\">Numerals</MenuItem>\r\n                <MenuItem value=\"Adverb\">Adverb</MenuItem>\r\n                <MenuItem value=\"Preposition\">Preposition</MenuItem>\r\n                <MenuItem value=\"Conjuction\">Conjuction</MenuItem>\r\n                <MenuItem value=\"Phrasal verb\">Phrasal verb</MenuItem>\r\n                <MenuItem value=\"Functional phrase\">Functional phrase</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </label>\r\n\r\n        {category === \"Verb\" && (\r\n          <FormControl\r\n            component=\"fieldset\"\r\n            sx={{\r\n              \"& .MuiFormGroup-root\": { display: \"flex\", flexDirection: \"row\" },\r\n            }}\r\n          >\r\n            <RadioGroup value={verbType} onChange={handleVerbTypeChange}>\r\n              <FormControlLabel\r\n                value=\"Regular\"\r\n                control={<Radio />}\r\n                label=\"Regular\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"Irregular\"\r\n                control={<Radio />}\r\n                label=\"Irregular\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        )}\r\n      </div>\r\n      <div>\r\n        {/* <TableTask\r\n          searchValue={searchValue}\r\n          category={category}\r\n          verbType={verbType}\r\n        /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectInput;\r\n","import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\r\nimport Grow from \"@mui/material/Grow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Popper from \"@mui/material/Popper\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport MenuList from \"@mui/material/MenuList\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport sprite from \"../../assets/svg/symbol-defs.svg\";\r\nimport \"./ButtonEdit.styled.scss\";\r\n\r\nexport default function ButtonEdit({ value, onEdit, onDelete }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  const handleEdit = (event) => {\r\n    event.preventDefault();\r\n    onEdit(value);\r\n    handleClose(event);\r\n  };\r\n\r\n  const handleDelete = (event) => {\r\n    event.preventDefault();\r\n    onDelete(value);\r\n    handleClose(event);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    } else if (event.key === \"Escape\") {\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <Stack direction=\"row\" spacing={2}>\r\n      <div>\r\n        <Button\r\n          ref={anchorRef}\r\n          id=\"composition-button\"\r\n          aria-controls={open ? \"composition-menu\" : undefined}\r\n          aria-expanded={open ? \"true\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Popper\r\n          open={open}\r\n          anchorEl={anchorRef.current}\r\n          role={undefined}\r\n          placement=\"bottom-start\"\r\n          transition\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom-start\" ? \"left top\" : \"left bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList\r\n                    autoFocusItem={open}\r\n                    id=\"composition-menu\"\r\n                    aria-labelledby=\"composition-button\"\r\n                    onKeyDown={handleListKeyDown}\r\n                  >\r\n                    <MenuItem onClick={handleEdit}>\r\n                      <svg className=\"icon-edit\" width=\"16\" height=\"16\">\r\n                        <use href={sprite + \"#icon-edit\"}></use>\r\n                      </svg>\r\n                      Edit\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleDelete}>\r\n                      <svg className=\"icon-trash\" width=\"16\" height=\"16\">\r\n                        <use href={sprite + \"#icon-trash\"}></use>\r\n                      </svg>\r\n                      Delete\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </Stack>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  createColumnHelper,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  getFilteredRowModel,\r\n  getPaginationRowModel,\r\n  getSortedRowModel,\r\n  useReactTable,\r\n} from \"@tanstack/react-table\";\r\nimport \"./TableTask.styled.scss\";\r\nimport ButtonEdit from \"../Edit/ButtonEdit\";\r\n\r\nfunction TableTask({ data, handleEdit, handleDelete }) {\r\n  const columnHelper = createColumnHelper();\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      columnHelper.accessor(\"word\", {\r\n        id: \"Word\",\r\n        header: \"Word\",\r\n        cell: (props) => {\r\n          const value = props.getValue();\r\n          return <p>{value}</p>;\r\n        },\r\n      }),\r\n      columnHelper.accessor(\"translation\", {\r\n        id: \"Translation\",\r\n        header: \"Translation\",\r\n        cell: (props) => {\r\n          const value = props.getValue();\r\n          return <p>{value}</p>;\r\n        },\r\n      }),\r\n      columnHelper.accessor(\"category\", {\r\n        id: \"Category\",\r\n        header: \"Category\",\r\n        cell: (props) => {\r\n          const value = props.getValue();\r\n          return <p>{value}</p>;\r\n        },\r\n      }),\r\n\r\n      columnHelper.accessor(\"progress\", {\r\n        id: \"Progress\",\r\n        header: \"Progress\",\r\n        cell: (props) => {\r\n          const value = props.getValue();\r\n          return <p>{value}</p>;\r\n        },\r\n      }),\r\n\r\n      columnHelper.accessor(\"edit\", {\r\n        id: \"Edit\",\r\n        header: \"Edit\",\r\n        cell: (props) => (\r\n          <ButtonEdit\r\n            onEdit={() => handleEdit(props)}\r\n            onDelete={() => handleDelete(props.row.original.word)}\r\n          />\r\n        ),\r\n      }),\r\n    ],\r\n    [columnHelper, handleEdit, handleDelete]\r\n  );\r\n\r\n  const table = useReactTable({\r\n    data,\r\n    columns,\r\n    // filterFns: {},\r\n    // state: {\r\n    //   columnFilters,\r\n    // },\r\n    // onColumnFiltersChange: setColumnFilters,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n    // debugTable: true,\r\n    // debugHeaders: true,\r\n    // debugColumns: false,\r\n  });\r\n\r\n  return (\r\n    <div className=\"container-table\">\r\n      <table>\r\n        <thead>\r\n          {table.getHeaderGroups().map((headerGroup) => (\r\n            <tr key={headerGroup.id}>\r\n              {headerGroup.headers.map((header) => (\r\n                <th key={header.id}>\r\n                  {header.isPlaceholder\r\n                    ? null\r\n                    : flexRender(\r\n                        header.column.columnDef.header,\r\n                        header.getContext()\r\n                      )}\r\n                  {/* <DebouncedInput\r\n                      type=\"text\"\r\n                      value={header.column.getFilterValue() || \"\"}\r\n                      onChange={(value) => header.column.setFilterValue(value)}\r\n                      placeholder={`Search...`}\r\n                    /> */}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody>\r\n          {table.getRowModel().rows.map((row) => {\r\n            return (\r\n              <tr key={row.id}>\r\n                {row.getVisibleCells().map((cell) => {\r\n                  return (\r\n                    <td key={cell.id}>\r\n                      {flexRender(\r\n                        cell.column.columnDef.cell,\r\n                        cell.getContext()\r\n                      )}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"h-2\">\r\n        <div className=\"b-1\">\r\n          <button\r\n            className=\"border rounded p-1\"\r\n            onClick={() => table.setPageIndex(0)}\r\n            disabled={!table.getCanPreviousPage()}\r\n          >\r\n            {\"<<\"}\r\n          </button>\r\n          <button\r\n            className=\"border rounded p-1\"\r\n            onClick={() => table.previousPage()}\r\n            disabled={!table.getCanPreviousPage()}\r\n          >\r\n            {\"<\"}\r\n          </button>\r\n          <button\r\n            className=\"border rounded p-1\"\r\n            onClick={() => table.nextPage()}\r\n            disabled={!table.getCanNextPage()}\r\n          >\r\n            {\">\"}\r\n          </button>\r\n          <button\r\n            className=\"border rounded p-1\"\r\n            onClick={() => table.setPageIndex(table.getPageCount() - 1)}\r\n            disabled={!table.getCanNextPage()}\r\n          >\r\n            {\">>\"}\r\n          </button>\r\n          <div className=\"h-3\">\r\n            <h3>Page</h3>\r\n            <strong>\r\n              {table.getState().pagination.pageIndex + 1} of{\" \"}\r\n              {table.getPageCount()}\r\n            </strong>\r\n          </div>\r\n          <div className=\"h-4\">\r\n            <h3>Go to page:</h3>\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={table.getState().pagination.pageIndex + 1}\r\n              onChange={(e) => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                table.setPageIndex(page);\r\n              }}\r\n              className=\"i-last\"\r\n            />\r\n          </div>\r\n          <select\r\n            value={table.getState().pagination.pageSize}\r\n            onChange={(e) => {\r\n              table.setPageSize(Number(e.target.value));\r\n            }}\r\n          >\r\n            {[10, 20, 30, 40, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div>{table.getPrePaginationRowModel().rows.length} Rows</div>\r\n        {/* <div>\r\n          <button onClick={() => rerender()}>Force Rerender</button>\r\n        </div> */}\r\n        {/* <div>\r\n          <button onClick={() => refreshData()}>Refresh Data</button>\r\n        </div> */}\r\n        {/* <pre>\r\n        {JSON.stringify(\r\n          { columnFilters: table.getState().columnFilters },\r\n          null,\r\n          2\r\n        )}\r\n      </pre> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableTask;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport \"./RecommendPage.styled.scss\";\r\nimport SelectInput from \"../../components/Select/SelectInput\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport TableTask from \"../../components/TableTask/TableTask\";\r\nimport { fetchWords } from \"../../services/api\";\r\nimport { Confirm, Report } from \"notiflix\";\r\n\r\nconst RecommendPage = ({ searchValue, category, verbType }) => {\r\n  const [selectedValue, setSelectedValue] = useState(null);\r\n  const [words, setWords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAllWords = async () => {\r\n      try {\r\n        const wordsData = await fetchWords();\r\n        console.log(\"wordsData: \", wordsData);\r\n        setWords(wordsData);\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    };\r\n    fetchAllWords();\r\n  }, []);\r\n\r\n  const handleEdit = (props) => {\r\n    const wordValue = props.row.original.word;\r\n    setSelectedValue(wordValue);\r\n    Confirm.show(\r\n      \"Confirm\",\r\n      \"Do you want to edit?\",\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        Report.warning(\"Wait for update\", \"Come back soon\", \"Okay\");\r\n      },\r\n      () => {\r\n        Report.info(\"Wait for update\", \"Come back soon\", \"Okay\");\r\n      },\r\n      {}\r\n    );\r\n    console.log(\"Click on edit\", { wordValue });\r\n  };\r\n  const handleDelete = (value) => {\r\n    Confirm.show(\r\n      \"Confirm\",\r\n      \"Do you want to edit?\",\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        Report.warning(\"Wait for update\", \"Come back soon\", \"Okay\");\r\n      },\r\n      () => {\r\n        Report.info(\"Wait for update\", \"Come back soon\", \"Okay\");\r\n      },\r\n      {}\r\n    );\r\n    console.log(\"Click on Delete\", { value });\r\n  };\r\n  const filteredData = useMemo(() => {\r\n    return words.filter((item) => {\r\n      const matchesSearch = (item.word || \"\") //Check\r\n        .toLowerCase()\r\n        .includes((searchValue || \"\").toLowerCase()); //Check\r\n\r\n      const matchesCategory = category ? item.category === category : true;\r\n\r\n      return matchesSearch && matchesCategory;\r\n    });\r\n  }, [searchValue, category, words]);\r\n\r\n  return (\r\n    <section className=\"r-section\">\r\n      <SelectInput />\r\n      <TableTask\r\n        data={filteredData}\r\n        handleEdit={handleEdit}\r\n        handleDelete={handleDelete}\r\n        searchValue={searchValue}\r\n        category={category}\r\n        verbType={verbType}\r\n      />\r\n      <Footer />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default RecommendPage;\r\n","import axios from \"axios\";\r\n\r\nconst wordsInstance = axios.create({\r\n  baseURL: \"https://65ccd3f8dd519126b83fa909.mockapi.io/\",\r\n});\r\n\r\n// Get recommend words\r\nexport const fetchWords = async () => {\r\n    const { data } = await wordsInstance.get(\"/words/\");\r\n    console.log('data-> re-words: ', data);\r\n    return data\r\n};\r\n\r\n//Get all my saved words\r\nexport const fetchMyWords = async () => {\r\n    const { data } = await wordsInstance.get(\"/save\");\r\n    console.log('data-> my-words: ', data);\r\n    return data\r\n};\r\n"],"names":["Footer","_jsxs","className","children","_jsx","src","Logo","alt","SelectInput","category","setCategory","useState","searchValue","setSearchValue","verbType","setVerbType","Box","component","sx","borderRadius","borderColor","boxShadow","border","noValidate","autoComplete","TextField","id","label","variant","fontWeight","fontSize","color","width","value","onChange","event","target","InputProps","endAdornment","SearchIcon","cursor","FormControl","InputLabel","Select","labelId","MenuItem","display","flexDirection","RadioGroup","FormControlLabel","control","Radio","ButtonEdit","_ref","onEdit","onDelete","open","setOpen","React","anchorRef","handleClose","current","contains","handleEdit","preventDefault","handleDelete","handleListKeyDown","key","prevOpen","focus","Stack","direction","spacing","Button","ref","undefined","onClick","handleToggle","Popper","anchorEl","role","placement","transition","_ref2","TransitionProps","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","height","href","sprite","data","columnHelper","createColumnHelper","columns","accessor","header","cell","props","getValue","row","original","word","table","useReactTable","getCoreRowModel","getFilteredRowModel","getSortedRowModel","getPaginationRowModel","getHeaderGroups","map","headerGroup","headers","isPlaceholder","flexRender","column","columnDef","getContext","getRowModel","rows","getVisibleCells","setPageIndex","disabled","getCanPreviousPage","previousPage","nextPage","getCanNextPage","getPageCount","getState","pagination","pageIndex","type","defaultValue","e","page","Number","pageSize","setPageSize","getPrePaginationRowModel","length","selectedValue","setSelectedValue","words","setWords","useEffect","async","wordsData","fetchWords","console","log","error","message","fetchAllWords","filteredData","useMemo","filter","item","matchesSearch","toLowerCase","includes","matchesCategory","TableTask","wordValue","Confirm","show","Report","warning","info","wordsInstance","axios","create","baseURL","get","fetchMyWords"],"sourceRoot":""}