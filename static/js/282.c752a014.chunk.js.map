{"version":3,"file":"static/js/282.c752a014.chunk.js","mappings":"8JAEA,MAmBA,EAnBqBA,IAQd,IARe,KACpBC,EAAI,SACJC,EAAQ,gBACRC,EAAe,YACfC,EAAW,YACXC,EAAW,GACXC,EAAE,KACFC,GACDP,EACC,OACEQ,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKH,KACLI,EAAAA,EAAAA,KAAA,MAAAD,SAAKF,KACLG,EAAAA,EAAAA,KAAA,MAAAD,SAAKJ,KAELK,EAAAA,EAAAA,KAAA,MAAAD,SAAKN,MACE,ECkBb,EAhCkBH,IAAgB,IAAf,MAAEW,GAAOX,EAC1B,MAAMY,EAAYC,MAAMC,QAAQH,IAAUA,EAAMI,OAEhD,OACEL,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAAD,SACGG,GACCD,EAAMK,KAAKT,IAEPC,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,UACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,QACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBAEJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2BAGRC,EAAAA,EAAAA,KAAA,SAAAD,SACGE,EAAMK,KAAKC,IACVP,EAAAA,EAAAA,KAACQ,EAAY,IAAuBD,GAAjBA,EAASX,gBAOtC,ECFV,EAzBsBa,KACpB,MAAOR,EAAOS,IAAYC,EAAAA,EAAAA,UAAS,MAenC,OAbAC,EAAAA,EAAAA,YAAU,KACcC,WACpB,IACE,MAAMC,QAAkBC,EAAAA,EAAAA,KACxBC,QAAQC,IAAI,cAAeH,GAC3BJ,EAASI,EAEX,CAAE,MAAOI,GACPF,QAAQC,IAAI,QACd,GAEFE,EAAe,GACd,KAEDnB,EAAAA,EAAAA,KAAA,WAASoB,UAAU,YAAWrB,UAC5BC,EAAAA,EAAAA,KAAA,OAAKoB,UAAU,cAAarB,UAC1BC,EAAAA,EAAAA,KAACqB,EAAS,CAACpB,MAAOA,OAEZ,C,kCCxBd,MAAMqB,E,QAAgBC,EAAMC,OAAO,CACjCC,QAAS,iDAGEV,EAAaF,UACtB,MAAM,KAAEa,SAAeJ,EAAcK,IAAI,WAEzC,OADAX,QAAQC,IAAI,SAAUS,GACfA,CAAI,C","sources":["components/WordListItem/WordListItem.jsx","components/WordsList/WordsList.jsx","pages/RecommendPage/Recommend.jsx","services/api.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst WordListItem = ({\r\n  edit,\r\n  progress,\r\n  exampleSentence,\r\n  description,\r\n  translation,\r\n  id,\r\n  word,\r\n}) => {\r\n  return (\r\n    <tr>\r\n      <td>{id}</td>\r\n      <td>{word}</td>\r\n      <td>{translation}</td>\r\n      {/* <td>{description}</td> */}\r\n      <td>{exampleSentence}</td>\r\n        </tr>\r\n  );\r\n};\r\nexport default WordListItem;\r\n","import React from \"react\";\r\nimport WordListItem from \"../WordListItem/WordListItem\";\r\nimport \"./WordList.styled.scss\"\r\n\r\nconst WordsList = ({ words }) => {\r\n  const showWords = Array.isArray(words) && words.length;\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {showWords &&\r\n          words.map((word) => {\r\n            return (\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>id</th>\r\n                    <th>Word</th>\r\n                    <th>Translation</th>\r\n                    {/* <th>Description</th> */}\r\n                    <th>Example Sentence</th>\r\n                      </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {words.map((wordItem) => (\r\n                    <WordListItem key={wordItem.id} {...wordItem} />\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            );\r\n          })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordsList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./RecommendPage.styled.scss\";\r\nimport { fetchWords } from \"../../services/api\";\r\nimport WordsList from \"../../components/WordsList/WordsList\";\r\n\r\nconst RecommendPage = () => {\r\n  const [words, setWords] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchAllWords = async () => {\r\n      try {\r\n        const wordsData = await fetchWords();\r\n        console.log('wordsData: ', wordsData);\r\n        setWords(wordsData);\r\n        \r\n      } catch (error) {\r\n        console.log(\"error\");\r\n      }\r\n    };\r\n    fetchAllWords();\r\n  }, []);\r\n  return (\r\n    <section className=\"r-section\">\r\n      <div className=\"title-recom\">\r\n        <WordsList words={words} />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default RecommendPage;\r\n","import axios from \"axios\";\r\n\r\nconst wordsInstance = axios.create({\r\n  baseURL: \"https://65ccd3f8dd519126b83fa909.mockapi.io/\",\r\n});\r\n\r\nexport const fetchWords = async () => {\r\n    const { data } = await wordsInstance.get(\"/words/\");\r\n    console.log('data: ', data);\r\n    return data\r\n};\r\n"],"names":["_ref","edit","progress","exampleSentence","description","translation","id","word","_jsxs","children","_jsx","words","showWords","Array","isArray","length","map","wordItem","WordListItem","RecommendPage","setWords","useState","useEffect","async","wordsData","fetchWords","console","log","error","fetchAllWords","className","WordsList","wordsInstance","axios","create","baseURL","data","get"],"sourceRoot":""}