{"version":3,"file":"static/js/206.87f5c430.chunk.js","mappings":"2IAEA,MAAMA,E,QAAgBC,EAAMC,OAAO,CACjCC,QAAS,iD,aCDX,MAsBA,EAtBqBC,IAQd,IARe,KACpBC,EAAI,SACJC,EAAQ,gBACRC,EAAe,YACfC,EAAW,YACXC,EAAW,GACXC,EAAE,KACFC,GACDP,EACC,OACEQ,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,MAAIH,MACVE,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,OAAKH,MACXE,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,QAAMF,MACZC,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,eAAaJ,MACnBG,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,eAAaL,MACnBI,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,mBAAiBN,MACvBK,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,YAAUP,MAChBM,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,QAAMR,OACT,ECQT,EA1BkBD,IAAgB,IAAf,MAAEU,GAAOV,EAC1B,MAAMW,EAAYC,MAAMC,QAAQH,IAAUA,EAAMI,OAEhD,OACEC,EAAAA,EAAAA,KAAA,OAAAN,UACEM,EAAAA,EAAAA,KAAA,MAAAN,SACGE,GACCD,EAAMM,KAAKT,IAEPQ,EAAAA,EAAAA,KAACE,EAAY,CACXX,GAAIC,EAAKD,GACTC,KAAMA,EAAKA,KACXF,YAAaE,EAAKF,YAClBD,YAAaG,EAAKH,YAClBD,gBAAiBI,EAAKJ,gBACtBD,SAAUK,EAAKL,SACfD,KAAMM,EAAKN,MACNM,EAAKD,SAKhB,ECGV,EAvBsBY,KACpB,MAAOR,EAAOS,IAAYC,EAAAA,EAAAA,UAAS,MAanC,OAXAC,EAAAA,EAAAA,YAAU,KACcC,WACpB,IACE,MAAMC,OHLYD,WACtB,MAAM,KAAEE,SAAe5B,EAAc6B,IAAI,WAEzC,OADAC,QAAQC,IAAI,SAAUH,GACfA,CAAI,EGEiBI,GACxBT,EAASI,EACX,CAAE,MAAOM,GACPH,QAAQC,IAAI,QACd,GAEFG,EAAe,GACd,KAEDf,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAAtB,UACEM,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,cAAavB,UAC1BM,EAAAA,EAAAA,KAACkB,EAAS,CAACvB,MAAOA,OAEnB,C","sources":["sevices/api.js","components/WordListItem/WordListItem.jsx","components/WordsList/WordsList.jsx","pages/RecommendPage/Recommend.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst wordsInstance = axios.create({\r\n  baseURL: \"https://65ccd3f8dd519126b83fa909.mockapi.io/\",\r\n});\r\n\r\nexport const fetchWords = async () => {\r\n    const { data } = await wordsInstance.get(\"/words/\");\r\n    console.log('data: ', data);\r\n    return data\r\n};\r\n","import React from \"react\";\r\n\r\nconst WordListItem = ({\r\n  edit,\r\n  progress,\r\n  exampleSentence,\r\n  description,\r\n  translation,\r\n  id,\r\n  word,\r\n}) => {\r\n  return (\r\n    <li>\r\n      <span>ID:{id}</span>\r\n      <span>key:{id}</span>\r\n      <span>word:{word}</span>\r\n      <span>translation:{translation}</span>\r\n      <span>description:{description}</span>\r\n      <span>exampleSentence:{exampleSentence}</span>\r\n      <span>progress:{progress}</span>\r\n      <span>edit:{edit}</span>\r\n    </li>\r\n  );\r\n};\r\nexport default WordListItem;\r\n","import React from \"react\";\r\nimport WordListItem from \"../WordListItem/WordListItem\";\r\n\r\nconst WordsList = ({ words }) => {\r\n  const showWords = Array.isArray(words) && words.length;\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {showWords &&\r\n          words.map((word) => {\r\n            return (\r\n              <WordListItem\r\n                id={word.id}\r\n                word={word.word}\r\n                translation={word.translation}\r\n                description={word.description}\r\n                exampleSentence={word.exampleSentence}\r\n                progress={word.progress}\r\n                edit={word.edit}\r\n                key={word.id}\r\n              />\r\n            );\r\n          })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordsList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./RecommendPage.styled.scss\";\r\nimport { fetchWords } from \"../../sevices/api\";\r\nimport WordsList from \"../../components/WordsList/WordsList\";\r\n\r\nconst RecommendPage = () => {\r\n  const [words, setWords] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchAllWords = async () => {\r\n      try {\r\n        const wordsData = await fetchWords();\r\n        setWords(wordsData);\r\n      } catch (error) {\r\n        console.log(\"error\");\r\n      }\r\n    };\r\n    fetchAllWords();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"title-recom\">\r\n        <WordsList words={words} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecommendPage;\r\n"],"names":["wordsInstance","axios","create","baseURL","_ref","edit","progress","exampleSentence","description","translation","id","word","_jsxs","children","words","showWords","Array","isArray","length","_jsx","map","WordListItem","RecommendPage","setWords","useState","useEffect","async","wordsData","data","get","console","log","fetchWords","error","fetchAllWords","_Fragment","className","WordsList"],"sourceRoot":""}