{"version":3,"file":"static/js/178.3c26d273.chunk.js","mappings":"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","sources":["components/Edit/ButtonEdit.jsx","components/TableTask/TableTask.jsx","components/Select/SelectInput.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\r\nimport Grow from \"@mui/material/Grow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Popper from \"@mui/material/Popper\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport MenuList from \"@mui/material/MenuList\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport sprite from \"../../assets/svg/symbol-defs.svg\";\r\nimport \"./ButtonEdit.styled.scss\";\r\n\r\nexport default function ButtonEdit({ value, onEdit, onDelete }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  const handleEdit = (event) => {\r\n    event.preventDefault();\r\n    onEdit(value);\r\n    handleClose(event);\r\n  };\r\n\r\n  const handleDelete = (event) => {\r\n    event.preventDefault();\r\n    onDelete(value);\r\n    handleClose(event);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    } else if (event.key === \"Escape\") {\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <Stack direction=\"row\" spacing={2}>\r\n      <div>\r\n        <Button\r\n          ref={anchorRef}\r\n          id=\"composition-button\"\r\n          aria-controls={open ? \"composition-menu\" : undefined}\r\n          aria-expanded={open ? \"true\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Popper\r\n          open={open}\r\n          anchorEl={anchorRef.current}\r\n          role={undefined}\r\n          placement=\"bottom-start\"\r\n          transition\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom-start\" ? \"left top\" : \"left bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList\r\n                    autoFocusItem={open}\r\n                    id=\"composition-menu\"\r\n                    aria-labelledby=\"composition-button\"\r\n                    onKeyDown={handleListKeyDown}\r\n                  >\r\n                    <MenuItem onClick={handleEdit}>\r\n                      <svg className=\"icon-edit\" width=\"16\" height=\"16\">\r\n                        <use href={sprite + \"#icon-edit\"}></use>\r\n                      </svg>\r\n                      Edit\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleDelete}>\r\n                      <svg className=\"icon-trash\" width=\"16\" height=\"16\">\r\n                        <use href={sprite + \"#icon-trash\"}></use>\r\n                      </svg>\r\n                      Delete\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </Stack>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport {\r\n  createColumnHelper,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  getFilteredRowModel,\r\n  getPaginationRowModel,\r\n  getSortedRowModel,\r\n  useReactTable,\r\n} from \"@tanstack/react-table\";\r\n// import DATA from \"../../data\";\r\nimport \"./TableTask.styled.scss\";\r\nimport ButtonEdit from \"../Edit/ButtonEdit\";\r\nimport { useState } from \"react\";\r\nimport { Confirm } from \"notiflix/build/notiflix-confirm-aio\";\r\nimport { Report } from \"notiflix/build/notiflix-report-aio\";\r\nimport { fetchWords } from \"../../services/api\";\r\n\r\nfunction TableTask({ searchValue, category }) {\r\n  const [selectedValue, setSelectedValue] = useState(null);\r\n  const [words, setWords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAllWords = async () => {\r\n      try {\r\n        const wordsData = await fetchWords();\r\n        console.log(\"wordsData: \", wordsData);\r\n        setWords(wordsData);\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    };\r\n    fetchAllWords();\r\n  }, []);\r\n\r\n  const handleEdit = (props) => {\r\n    const wordValue = props.row.original.Word;\r\n    setSelectedValue(wordValue);\r\n    Confirm.show(\r\n      \"Confirm\",\r\n      \"Do you want to edit?\",\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        Report.warning(\"Wait for update\", \"Come back soon\", \"Okay\");\r\n      },\r\n      () => {\r\n        Report.info(\"Wait for update\", \"Come back soon\", \"Okay\");\r\n      },\r\n      {}\r\n    );\r\n    console.log(\"Click on edit\", { wordValue });\r\n  };\r\n  const handleDelete = (value) => {\r\n    Confirm.show(\r\n      \"Confirm\",\r\n      \"Do you want to edit?\",\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        Report.warning(\"Wait for update\", \"Come back soon\", \"Okay\");\r\n      },\r\n      () => {\r\n        Report.info(\"Wait for update\", \"Come back soon\", \"Okay\");\r\n      },\r\n      {}\r\n    );\r\n    console.log(\"Click on Delete\", { value });\r\n  };\r\n  const filteredData = useMemo(() => {\r\n    return words.filter((item) => {\r\n      const matchesSearch = item.word.toLowerCase().includes(\r\n        searchValue.toLowerCase()\r\n      );\r\n      \r\n      const matchesCategory = category ? item.category === category : true;\r\n      \r\n      return matchesSearch && matchesCategory;\r\n    });\r\n  }, [searchValue, category, words]);\r\n  console.log('filteredData: ======>', filteredData);\r\n\r\n  const columnHelper = createColumnHelper();\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      columnHelper.accessor(\"word\", {\r\n        id: \"Word\",\r\n        header: \"Word\",\r\n        cell: (props) => <p>{props.getValue()}</p>,\r\n      }),\r\n      columnHelper.accessor(\"translation\", {\r\n        id: \"Translation\",\r\n        header: \"Translation\",\r\n        cell: (props) => <p>{props.getValue()}</p>,\r\n      }),\r\n      columnHelper.accessor(\"category\", {\r\n        id: \"Category\",\r\n        header: \"Category\",\r\n        cell: (props) => <p>{props.getValue()}</p>,\r\n      }),\r\n\r\n      columnHelper.accessor(\"progress\", {\r\n        id: \"Progress\",\r\n        header: \"Progress\",\r\n        cell: (props) => <p>{props.getValue()}</p>,\r\n      }),\r\n\r\n      columnHelper.accessor(\"Edit\", {\r\n        id: \"Edit\",\r\n        header: \"Edit\",\r\n        cell: (props) => (\r\n          <ButtonEdit\r\n            onEdit={() => handleEdit(props)}\r\n            onDelete={() => handleDelete(props.row.original.Word)}\r\n          />\r\n        ),\r\n      }),\r\n    ],\r\n    [columnHelper]\r\n  );\r\n\r\n  const table = useReactTable({\r\n    data: filteredData,\r\n    columns,\r\n    // filterFns: {},\r\n    // state: {\r\n    //   columnFilters,\r\n    // },\r\n    // onColumnFiltersChange: setColumnFilters,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n    // debugTable: true,\r\n    // debugHeaders: true,\r\n    // debugColumns: false,\r\n  });\r\n\r\n  return (\r\n    <div className=\"container-table\">\r\n      <table>\r\n        <thead>\r\n          {table.getHeaderGroups().map((headerGroup) => (\r\n            <tr key={headerGroup.id}>\r\n              {headerGroup.headers.map((header) => (\r\n                <th key={header.id}>\r\n                  {header.isPlaceholder\r\n                    ? null\r\n                    : flexRender(\r\n                        header.column.columnDef.header,\r\n                        header.getContext()\r\n                      )}\r\n                  {/* <DebouncedInput\r\n                      type=\"text\"\r\n                      value={header.column.getFilterValue() || \"\"}\r\n                      onChange={(value) => header.column.setFilterValue(value)}\r\n                      placeholder={`Search...`}\r\n                    /> */}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody>\r\n          {table.getRowModel().rows.map((row) => {\r\n            return (\r\n              <tr key={row.id}>\r\n                {row.getVisibleCells().map((cell) => {\r\n                  return (\r\n                    <td key={cell.id}>\r\n                      {flexRender(\r\n                        cell.column.columnDef.cell,\r\n                        cell.getContext()\r\n                      )}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"h-2\">\r\n        <div className=\"b-1\">\r\n          <button\r\n            className=\"border rounded p-1\"\r\n            onClick={() => table.setPageIndex(0)}\r\n            disabled={!table.getCanPreviousPage()}\r\n          >\r\n            {\"<<\"}\r\n          </button>\r\n          <button\r\n            className=\"border rounded p-1\"\r\n            onClick={() => table.previousPage()}\r\n            disabled={!table.getCanPreviousPage()}\r\n          >\r\n            {\"<\"}\r\n          </button>\r\n          <button\r\n            className=\"border rounded p-1\"\r\n            onClick={() => table.nextPage()}\r\n            disabled={!table.getCanNextPage()}\r\n          >\r\n            {\">\"}\r\n          </button>\r\n          <button\r\n            className=\"border rounded p-1\"\r\n            onClick={() => table.setPageIndex(table.getPageCount() - 1)}\r\n            disabled={!table.getCanNextPage()}\r\n          >\r\n            {\">>\"}\r\n          </button>\r\n          <div className=\"h-3\">\r\n            <h3>Page</h3>\r\n            <strong>\r\n              {table.getState().pagination.pageIndex + 1} of{\" \"}\r\n              {table.getPageCount()}\r\n            </strong>\r\n          </div>\r\n          <div className=\"h-4\">\r\n            <h3>Go to page:</h3>\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={table.getState().pagination.pageIndex + 1}\r\n              onChange={(e) => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                table.setPageIndex(page);\r\n              }}\r\n              className=\"i-last\"\r\n            />\r\n          </div>\r\n          <select\r\n            value={table.getState().pagination.pageSize}\r\n            onChange={(e) => {\r\n              table.setPageSize(Number(e.target.value));\r\n            }}\r\n          >\r\n            {[10, 20, 30, 40, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div>{table.getPrePaginationRowModel().rows.length} Rows</div>\r\n        {/* <div>\r\n          <button onClick={() => rerender()}>Force Rerender</button>\r\n        </div> */}\r\n        {/* <div>\r\n          <button onClick={() => refreshData()}>Refresh Data</button>\r\n        </div> */}\r\n        {/* <pre>\r\n        {JSON.stringify(\r\n          { columnFilters: table.getState().columnFilters },\r\n          null,\r\n          2\r\n        )}\r\n      </pre> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableTask;\r\n","import React, { useState } from \"react\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { FormControlLabel, Radio, RadioGroup } from \"@mui/material\";\r\n\r\nimport \"./SelectInput.styled.scss\";\r\nimport TableTask from \"../TableTask/TableTask\";\r\n\r\nconst SelectInput = () => {\r\n  const [category, setCategory] = useState(\"\");\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [verbType, setVerbType] = useState(\"\");\r\n\r\n  const handleCategoryChange = (event) => {\r\n    setCategory(event.target.value);\r\n    if (event.target.value !== \"Verb\") {\r\n      setVerbType(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchValue(event.target.value);\r\n  };\r\n\r\n  const handleVerbTypeChange = (event) => {\r\n    setVerbType(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-select\">\r\n        <label className=\"label\">\r\n          <div className=\"input-container\">\r\n            <Box\r\n              component=\"form\"\r\n              sx={{\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  borderRadius: \"15px\",\r\n                  \"&:hover fieldset\": {\r\n                    borderColor: \"rgb(133, 170, 159)\",\r\n                    boxShadow: \"0px 4px 4px 0px rgba(0, 0, 0, 0.25)\",\r\n                  },\r\n                  \"&.Mui-focused fieldset\": {\r\n                    boxShadow: \"0px 4px 4px 0px rgba(0, 0, 0, 0.25)\",\r\n                    borderColor: \"rgb(133, 170, 159)\",\r\n                  },\r\n                  \"&.MuiInputBase fieldset\": {\r\n                    border: \"none\",\r\n                  },\r\n                },\r\n              }}\r\n              noValidate\r\n              autoComplete=\"off\"\r\n            >\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Find the word\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  \"& .MuiInputLabel-root\": {\r\n                    fontWeight: \"500\",\r\n                    fontSize: \"16px\",\r\n                    color: \"#121417\",\r\n                  },\r\n                  \"& .MuiInputLabel-root.Mui-focused\": {\r\n                    color: \"rgb(133, 170, 159)\",\r\n                  },\r\n                  width: \"100%\",\r\n                }}\r\n                value={searchValue}\r\n                onChange={handleSearchChange}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <SearchIcon\r\n                      sx={{ color: \"action.active\", cursor: \"pointer\" }}\r\n                    />\r\n                  ),\r\n                }}\r\n              />\r\n            </Box>\r\n          </div>\r\n        </label>\r\n\r\n        <label className=\"label\">\r\n          <div className=\"input-container\">\r\n            <FormControl\r\n              className=\"input-category\"\r\n              sx={{\r\n                borderRadius: \"15px\",\r\n                fontSize: \"16px\",\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  borderColor: \"rgb(133, 170, 159)\",\r\n                  \"&:hover fieldset\": {\r\n                    borderColor: \"rgb(133, 170, 159)\",\r\n                    boxShadow: \"0px 4px 4px 0px rgba(0, 0, 0, 0.25)\",\r\n                  },\r\n                  \"&.Mui-focused fieldset\": {\r\n                    borderColor: \"rgb(133, 170, 159)\",\r\n                  },\r\n                },\r\n              }}\r\n            >\r\n              <InputLabel\r\n                sx={{\r\n                  fontWeight: \"500\",\r\n                  color: \"#121417\",\r\n                  fontSize: \"16px\",\r\n                  \"&.Mui-focused\": {\r\n                    color: \"rgb(133, 170, 159)\",\r\n                  },\r\n                }}\r\n                id=\"demo-select-small-label\"\r\n              >\r\n                Category\r\n              </InputLabel>\r\n\r\n              <Select\r\n                labelId=\"demo-select-small-label\"\r\n                id=\"demo-select-small\"\r\n                value={category}\r\n                label=\"Category\"\r\n                onChange={handleCategoryChange}\r\n                sx={{\r\n                  borderRadius: \"15px\",\r\n                }}\r\n              >\r\n                <MenuItem className=\"input-label\" value=\"\">\r\n                  <em>All</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"Verb\">Verb</MenuItem>\r\n                <MenuItem value=\"Participle\">Participle</MenuItem>\r\n                <MenuItem value=\"Adjective\">Adjective</MenuItem>\r\n                <MenuItem value=\"Pronoun\">Pronoun</MenuItem>\r\n                <MenuItem value=\"Numerals\">Numerals</MenuItem>\r\n                <MenuItem value=\"Adverb\">Adverb</MenuItem>\r\n                <MenuItem value=\"Preposition\">Preposition</MenuItem>\r\n                <MenuItem value=\"Conjuction\">Conjuction</MenuItem>\r\n                <MenuItem value=\"Phrasal verb\">Phrasal verb</MenuItem>\r\n                <MenuItem value=\"Functional phrase\">Functional phrase</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </label>\r\n\r\n        {category === \"Verb\" && (\r\n          <FormControl\r\n            component=\"fieldset\"\r\n            sx={{\r\n              \"& .MuiFormGroup-root\": { display: \"flex\", flexDirection: \"row\" },\r\n            }}\r\n          >\r\n            <RadioGroup value={verbType} onChange={handleVerbTypeChange}>\r\n              <FormControlLabel\r\n                value=\"Regular\"\r\n                control={<Radio />}\r\n                label=\"Regular\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"Irregular\"\r\n                control={<Radio />}\r\n                label=\"Irregular\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <TableTask\r\n          searchValue={searchValue}\r\n          category={category}\r\n          verbType={verbType}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectInput;\r\n","import * as React from \"react\";\r\n\r\nimport SelectInput from \"../../components/Select/SelectInput\";\r\nimport \"./Home.styled.scss\";\r\nimport Logo from \"../../assets/images/logo192.png\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { fetchAllWords } from \"../../redux/operations\";\r\nimport { selectWords } from \"../../redux/selectors\";\r\n\r\nconst Home = () => {\r\n  // const dispatch = useDispatch();\r\n  // const { words } = useSelector(selectWords);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchAllWords());\r\n  //   },[dispatch]);\r\n\r\n  //   const filteredWords = Array.isArray(words) ? words : [];\r\n  //   console.log('filteredWords: ', filteredWords);\r\n  return (\r\n    <section className=\"home-container\">\r\n      {/* {filteredWords.length > 0 && (\r\n        <ul>\r\n          {filteredWords.map((word, index) => (\r\n            <li key={index}>{word}</li>\r\n          ))}\r\n        </ul>\r\n      )} */}\r\n      <SelectInput />\r\n      {/* LOGO REACT */}\r\n      <div className=\"logo-box\">\r\n        <img src={Logo} alt=\"logo\" className=\"App-logo-spin\" />\r\n        <p className=\"logo-title-example\">under development</p>\r\n        <img src={Logo} alt=\"logo\" className=\"App-logo-spin-1\" />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default Home;\r\n","import axios from \"axios\";\r\n\r\nconst wordsInstance = axios.create({\r\n  baseURL: \"https://65ccd3f8dd519126b83fa909.mockapi.io/\",\r\n});\r\n\r\nexport const fetchWords = async () => {\r\n    const { data } = await wordsInstance.get(\"/words/\");\r\n    console.log('data: ', data);\r\n    return data\r\n};\r\n"],"names":["ButtonEdit","_ref","value","onEdit","onDelete","open","setOpen","React","anchorRef","handleClose","event","current","contains","target","handleEdit","preventDefault","handleDelete","handleListKeyDown","key","prevOpen","focus","_jsx","Stack","direction","spacing","children","_jsxs","Button","ref","id","undefined","onClick","handleToggle","Popper","anchorEl","role","placement","transition","_ref2","TransitionProps","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","className","width","height","href","sprite","searchValue","category","selectedValue","setSelectedValue","useState","words","setWords","useEffect","async","wordsData","fetchWords","console","log","error","message","fetchAllWords","filteredData","useMemo","filter","item","matchesSearch","word","toLowerCase","includes","matchesCategory","columnHelper","createColumnHelper","columns","accessor","header","cell","props","getValue","wordValue","row","original","Word","Confirm","show","Report","warning","info","table","useReactTable","data","getCoreRowModel","getFilteredRowModel","getSortedRowModel","getPaginationRowModel","getHeaderGroups","map","headerGroup","headers","isPlaceholder","flexRender","column","columnDef","getContext","getRowModel","rows","getVisibleCells","setPageIndex","disabled","getCanPreviousPage","previousPage","nextPage","getCanNextPage","getPageCount","getState","pagination","pageIndex","type","defaultValue","onChange","e","page","Number","pageSize","setPageSize","getPrePaginationRowModel","length","SelectInput","setCategory","setSearchValue","verbType","setVerbType","Box","component","sx","borderRadius","borderColor","boxShadow","border","noValidate","autoComplete","TextField","label","variant","fontWeight","fontSize","color","InputProps","endAdornment","SearchIcon","cursor","FormControl","InputLabel","Select","labelId","display","flexDirection","RadioGroup","FormControlLabel","control","Radio","TableTask","Home","src","Logo","alt","wordsInstance","axios","create","baseURL","get"],"sourceRoot":""}